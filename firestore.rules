
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow users to read/write their own data
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }
    
    // Rules for quotes collection
    match /quotes/{quoteId} {
      // Anyone authenticated can read quotes (for client dashboard)
      allow read: if request.auth != null;

      // Allow create if the user is the author
      allow create: if request.auth != null && request.auth.uid == request.resource.data.authorId;

      // Allow update and delete only for the author of the quote
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }

    // Allow clients and therapists to manage their bookings
    match /bookings/{bookingId} {
      allow read, create: if request.auth != null;
      allow update: if request.auth != null; // Simplification for demo
    }

    // Rules for chats
    match /chats/{chatId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participants;

      match /messages/{messageId} {
        allow read, create: if request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid]);
        allow update: if request.auth != null && request.resource.data.text == "This message has been deleted.";
      }
    }
    
    // AI chat history
    match /ai_chats/{chatId} {
        allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
        allow read: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
