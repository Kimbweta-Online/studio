rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read any user profile (for booking), but only edit their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Bookings can be created by any authenticated user.
    // Users can only read/update bookings where they are the client or therapist.
    match /bookings/{bookingId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.therapistId;
    }

    // Any authenticated user can read quotes.
    // Only authenticated users (therapists) can create quotes.
    match /quotes/{quoteId} {
        allow read: if true;
        allow create: if request.auth != null;
    }

    // Chat messages can only be accessed by participants of the chat.
    match /chats/{chatId} {
      // Allow access if the user is one of the two participants stored in the document.
      allow read, write, delete: if request.auth.uid in resource.data.participants;

      // Rules for the subcollection of messages within a chat.
      match /messages/{messageId} {
        // Inherit the parent chat document's read permission.
        // Allow message creation if the user is a participant in the chat.
        allow read, create: if get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid]);
        // Only the sender can update/delete their own message.
        allow update, delete: if request.auth.uid == resource.data.senderId;
      }
    }
  }
}
