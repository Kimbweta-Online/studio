
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Allow users to read and write their own data
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }

    // Allow any authenticated user to read quotes
    match /quotes/{quoteId} {
      allow read: if request.auth != null;
      // Allow write only if user is the author
      allow create: if request.auth.uid == request.resource.data.authorId;
      allow update, delete: if request.auth.uid == resource.data.authorId;
    }

    // Rules for Bookings
    match /bookings/{bookingId} {
        allow read, create: if request.auth != null;
        // Allow therapist to update status
        allow update: if request.auth.uid == resource.data.therapistId;
    }
    
    // Rules for AI Chats
    match /ai_chats/{chatId} {
        // Only allow user to create/read their own AI chats
        allow read, create: if request.auth.uid == request.resource.data.userId;
    }

    // Rules for User-to-User Chats
    match /chats/{chatId} {
      allow read, write: if request.auth.uid in resource.data.participants;
      
      match /messages/{messageId} {
         allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
         allow update: if request.auth.uid == resource.data.senderId;
      }
    }
  }
}
