rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read and write their own user document
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }

    // Allow clients to read therapist documents
    match /users/{therapistId} {
        allow read: if request.auth != null && exists(/databases/$(database)/documents/users/$(therapistId)) && get(/databases/$(database)/documents/users/$(therapistId)).data.role == 'therapist';
    }

    // Allow clients to manage their own bookings
    match /bookings/{bookingId} {
      allow read, create: if request.auth.uid == request.resource.data.clientId;
      allow update: if request.auth.uid == request.resource.data.clientId || request.auth.uid == request.resource.data.therapistId;
    }

    // Allow therapists to manage their bookings
     match /bookings/{bookingId} {
      allow read, update: if request.auth.uid == get(/databases/$(database)/documents/bookings/$(bookingId)).data.therapistId;
    }

    // Allow therapists to manage quotes
    match /quotes/{quoteId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth.uid == request.resource.data.authorId;
    }

    // Chat permissions
    match /chats/{chatId}/messages/{messageId} {
      allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
      allow update: if request.auth.uid == get(/databases/$(database)/documents/chats/$(chatId)/messages/$(messageId)).data.senderId;
    }

    match /chats/{chatId} {
       allow read, create: if request.auth.uid in request.resource.data.participants;
    }
  }
}